class httpFecht{async postJson(e,t){return this.fetchData(e,{method:"POST",body:JSON.stringify(t)})}fetchData=async(e,t={})=>fetch(e,{headers:{"Content-Type":"application/json"},...t}).then(e=>{if(e.ok)return e.text();throw new Error("Network response was not ok",e.statusText)}).then(e=>{if(""===e)throw new Error("Empty response from server");return JSON.parse(e)});ajaxPost(e){$.ajax({type:"POST",url:e,data:{p_from:"z"}}).done(e=>{})}async axiosPost(e){return axios(e).then(e=>e.data)}axiosExecute=async(r,e=!1,s=!0,n=3)=>{if(!this.checkSessionCookie())return this.manejoErrorPetitionHttp({message:"La session ha expirado, Trataré de recuperar la session. Por favor itente nuevamente en unos segundos. Sino debe cerrar la aplicación y volver a iniciarla."}),updateConnectionStatusFocus(),!1;r.method=r.type||r.method,delete r.type;var t=void 0===r.isShowPreload||r.isShowPreload;return delete r.isShowPreload,r.headers={"Content-Type":e?"application/json":"application/x-www-form-urlencoded"},xPopupLoad.titulo="Cargando...",1==t&&xPopupLoad.xopen(),new Promise((t,a)=>{const o=async()=>{try{var e=await this.axiosPost(r);t(s?JSON.stringify(e):e)}catch(e){if(!(0<n))throw this.manejoErrorPetitionHttp(e),a(e),e;setTimeout(()=>o(--n),2e3)}finally{xPopupLoad.xclose()}};o()})};manejoErrorPetitionHttp=e=>{xPopupLoad.xclose();let t="";t="Network Error"===e.message?`<i class="fa fa-plug fa-2x text-danger" aria-hidden="true"></i>
                                <p class="fw-600 fs-20">Sin Conexión a internet</p>
                                <p class="fw-100 fs-14">Verifique su conexión a internet y vuelva a intentarlo.</p>`:`<i class="fa fa-plug fa-2x text-danger" aria-hidden="true"></i>
                                <p class="fw-600 fs-20">Up! ocurrio un error!</p>
                                <p class="fw-100 fs-14">No pudimos procesar la socilitud. Vuelva a intentarlo nuevamente.</p>
                                <p class="fw-100 fs-12 text-warning">${e.message}.</p>`;e=paramsSwalAlert;e.html=`<div class="p-1">${t}</div>`,showAlertSwalHtml(e)};checkSessionCookie=()=>{var t=document.cookie.split(";");for(let e=0;e<t.length;e++)if(t[e].trim().startsWith("PHPSESSID="))return!0;return!1}}